#include <iostream>
#include <vector>
using namespace std;

int partition(vector<int> &arr, int st, int end) {
    int pivot = arr[end];
    int idx = st - 1;

    for (int j = st; j < end; j++) { // loop only till end-1
        if (arr[j] <= pivot) {
            idx++;
            swap(arr[j], arr[idx]);
        }
    }
    swap(arr[idx + 1], arr[end]); // place pivot correctly
    return idx + 1; // return pivot's final position
}

void quickSort(vector<int> &arr, int st, int end) {
    if (st < end) {
        int pivIdx = partition(arr, st, end);
        quickSort(arr, st, pivIdx - 1); // left half
        quickSort(arr, pivIdx + 1, end); // right half
    }
}

int main() {
    vector<int> arr = {5, 2, 6, 4, 1, 3};
    quickSort(arr, 0, arr.size() - 1);

    for (int val : arr) {
        cout << val << " ";
    }
    cout << endl;
    return 0;
}
